// Generated from C:/Users/Julio/Desktop/Estudios/UVG/2018/Primer Semestre/Base de Datos/proyecto1\gramaticaProyecto.g4 by ANTLR 4.7
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class gramaticaProyectoLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		CREATE=1, DATABASE=2, DATABASES=3, TABLE=4, TABLES=5, DROP=6, ALTER=7, 
		RENAME=8, TO=9, SHOW=10, USE=11, RES_INT=12, RES_FLOAT=13, RES_CHAR=14, 
		RES_DATE=15, CONSTRAINT=16, KEY=17, PRIMARY=18, FOREIGN=19, REFERENCES=20, 
		CHECK=21, ADD=22, COLUMN=23, COLUMNS=24, FROM=25, RES_AND=26, RES_OR=27, 
		RES_NOT=28, INSERT=29, INTO=30, VALUES=31, UPDATE=32, SET=33, WHERE=34, 
		DELETE=35, SELECT=36, ORDER=37, BY=38, ASC=39, DESC=40, NULL=41, INT=42, 
		ID=43, DATE=44, CHAR=45, WHITESPACE=46, COMMENT=47;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
		"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "CREATE", 
		"DATABASE", "DATABASES", "TABLE", "TABLES", "DROP", "ALTER", "RENAME", 
		"TO", "SHOW", "USE", "RES_INT", "RES_FLOAT", "RES_CHAR", "RES_DATE", "CONSTRAINT", 
		"KEY", "PRIMARY", "FOREIGN", "REFERENCES", "CHECK", "ADD", "COLUMN", "COLUMNS", 
		"FROM", "RES_AND", "RES_OR", "RES_NOT", "INSERT", "INTO", "VALUES", "UPDATE", 
		"SET", "WHERE", "DELETE", "SELECT", "ORDER", "BY", "ASC", "DESC", "NULL", 
		"LETTER", "DIGIT", "ASCII", "TWO_DIGITS", "THREE_DIGITS", "FOUR_DIGITS", 
		"YEAR", "MONTH", "DAY", "INT", "ID", "DATE", "CHAR", "WHITESPACE", "COMMENT"
	};

	private static final String[] _LITERAL_NAMES = {
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "CREATE", "DATABASE", "DATABASES", "TABLE", "TABLES", "DROP", "ALTER", 
		"RENAME", "TO", "SHOW", "USE", "RES_INT", "RES_FLOAT", "RES_CHAR", "RES_DATE", 
		"CONSTRAINT", "KEY", "PRIMARY", "FOREIGN", "REFERENCES", "CHECK", "ADD", 
		"COLUMN", "COLUMNS", "FROM", "RES_AND", "RES_OR", "RES_NOT", "INSERT", 
		"INTO", "VALUES", "UPDATE", "SET", "WHERE", "DELETE", "SELECT", "ORDER", 
		"BY", "ASC", "DESC", "NULL", "INT", "ID", "DATE", "CHAR", "WHITESPACE", 
		"COMMENT"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public gramaticaProyectoLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "gramaticaProyecto.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\61\u0234\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t"+
		"=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4"+
		"I\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\3\2\3"+
		"\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13"+
		"\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22"+
		"\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31"+
		"\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35"+
		"\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36"+
		"\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3!\3!\3"+
		"!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3%\3%\3"+
		"%\3%\3%\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3"+
		"*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3-\3-\3-\3"+
		"-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3"+
		"/\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62"+
		"\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64"+
		"\3\64\3\64\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\67\3\67\3\67\3\67\38\3"+
		"8\38\38\38\38\38\39\39\39\39\39\3:\3:\3:\3:\3:\3:\3:\3;\3;\3;\3;\3;\3"+
		";\3;\3<\3<\3<\3<\3=\3=\3=\3=\3=\3=\3>\3>\3>\3>\3>\3>\3>\3?\3?\3?\3?\3"+
		"?\3?\3?\3@\3@\3@\3@\3@\3@\3A\3A\3A\3B\3B\3B\3B\3C\3C\3C\3C\3C\3D\3D\3"+
		"D\3D\3D\3E\3E\3F\3F\3G\3G\3G\3G\3G\3G\3G\5G\u01dc\nG\3H\3H\3H\3I\3I\3"+
		"I\3J\3J\3J\3K\3K\3L\3L\5L\u01eb\nL\3M\3M\5M\u01ef\nM\3N\3N\7N\u01f3\n"+
		"N\fN\16N\u01f6\13N\3O\3O\3O\7O\u01fb\nO\fO\16O\u01fe\13O\3P\3P\3P\3P\3"+
		"P\3P\3P\3P\3Q\3Q\3Q\7Q\u020b\nQ\fQ\16Q\u020e\13Q\3Q\3Q\3R\6R\u0213\nR"+
		"\rR\16R\u0214\3R\3R\3S\3S\3S\3S\7S\u021d\nS\fS\16S\u0220\13S\3S\5S\u0223"+
		"\nS\3S\3S\3S\3S\3S\7S\u022a\nS\fS\16S\u022d\13S\3S\3S\5S\u0231\nS\3S\3"+
		"S\3\u022b\2T\3\2\5\2\7\2\t\2\13\2\r\2\17\2\21\2\23\2\25\2\27\2\31\2\33"+
		"\2\35\2\37\2!\2#\2%\2\'\2)\2+\2-\2/\2\61\2\63\2\65\2\67\39\4;\5=\6?\7"+
		"A\bC\tE\nG\13I\fK\rM\16O\17Q\20S\21U\22W\23Y\24[\25]\26_\27a\30c\31e\32"+
		"g\33i\34k\35m\36o\37q s!u\"w#y${%}&\177\'\u0081(\u0083)\u0085*\u0087+"+
		"\u0089\2\u008b\2\u008d\2\u008f\2\u0091\2\u0093\2\u0095\2\u0097\2\u0099"+
		"\2\u009b,\u009d-\u009f.\u00a1/\u00a3\60\u00a5\61\3\2 \4\2CCcc\4\2DDdd"+
		"\4\2EEee\4\2FFff\4\2GGgg\4\2HHhh\4\2IIii\4\2JJjj\4\2KKkk\4\2LLll\4\2M"+
		"Mmm\4\2NNnn\4\2OOoo\4\2PPpp\4\2QQqq\4\2RRrr\4\2SSss\4\2TTtt\4\2UUuu\4"+
		"\2VVvv\4\2WWww\4\2XXxx\4\2YYyy\4\2ZZzz\4\2[[{{\4\2\\\\||\4\2C\\c|\4\2"+
		"\13\f\60\60\5\2\13\f\16\17\"\"\4\2\f\f\17\17\2\u0220\2\67\3\2\2\2\29\3"+
		"\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2"+
		"\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2"+
		"S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3"+
		"\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2"+
		"\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2"+
		"y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083"+
		"\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u009b\3\2\2\2\2\u009d\3\2\2"+
		"\2\2\u009f\3\2\2\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2\2\2\u00a5\3\2\2\2\3\u00a7"+
		"\3\2\2\2\5\u00a9\3\2\2\2\7\u00ab\3\2\2\2\t\u00ad\3\2\2\2\13\u00af\3\2"+
		"\2\2\r\u00b1\3\2\2\2\17\u00b3\3\2\2\2\21\u00b5\3\2\2\2\23\u00b7\3\2\2"+
		"\2\25\u00b9\3\2\2\2\27\u00bb\3\2\2\2\31\u00bd\3\2\2\2\33\u00bf\3\2\2\2"+
		"\35\u00c1\3\2\2\2\37\u00c3\3\2\2\2!\u00c5\3\2\2\2#\u00c7\3\2\2\2%\u00c9"+
		"\3\2\2\2\'\u00cb\3\2\2\2)\u00cd\3\2\2\2+\u00cf\3\2\2\2-\u00d1\3\2\2\2"+
		"/\u00d3\3\2\2\2\61\u00d5\3\2\2\2\63\u00d7\3\2\2\2\65\u00d9\3\2\2\2\67"+
		"\u00db\3\2\2\29\u00e2\3\2\2\2;\u00eb\3\2\2\2=\u00f5\3\2\2\2?\u00fb\3\2"+
		"\2\2A\u0102\3\2\2\2C\u0107\3\2\2\2E\u010d\3\2\2\2G\u0114\3\2\2\2I\u0117"+
		"\3\2\2\2K\u011c\3\2\2\2M\u0120\3\2\2\2O\u0124\3\2\2\2Q\u012a\3\2\2\2S"+
		"\u012f\3\2\2\2U\u0134\3\2\2\2W\u013f\3\2\2\2Y\u0143\3\2\2\2[\u014b\3\2"+
		"\2\2]\u0153\3\2\2\2_\u015e\3\2\2\2a\u0164\3\2\2\2c\u0168\3\2\2\2e\u016f"+
		"\3\2\2\2g\u0177\3\2\2\2i\u017c\3\2\2\2k\u0180\3\2\2\2m\u0183\3\2\2\2o"+
		"\u0187\3\2\2\2q\u018e\3\2\2\2s\u0193\3\2\2\2u\u019a\3\2\2\2w\u01a1\3\2"+
		"\2\2y\u01a5\3\2\2\2{\u01ab\3\2\2\2}\u01b2\3\2\2\2\177\u01b9\3\2\2\2\u0081"+
		"\u01bf\3\2\2\2\u0083\u01c2\3\2\2\2\u0085\u01c6\3\2\2\2\u0087\u01cb\3\2"+
		"\2\2\u0089\u01d0\3\2\2\2\u008b\u01d2\3\2\2\2\u008d\u01db\3\2\2\2\u008f"+
		"\u01dd\3\2\2\2\u0091\u01e0\3\2\2\2\u0093\u01e3\3\2\2\2\u0095\u01e6\3\2"+
		"\2\2\u0097\u01ea\3\2\2\2\u0099\u01ee\3\2\2\2\u009b\u01f0\3\2\2\2\u009d"+
		"\u01f7\3\2\2\2\u009f\u01ff\3\2\2\2\u00a1\u0207\3\2\2\2\u00a3\u0212\3\2"+
		"\2\2\u00a5\u0230\3\2\2\2\u00a7\u00a8\t\2\2\2\u00a8\4\3\2\2\2\u00a9\u00aa"+
		"\t\3\2\2\u00aa\6\3\2\2\2\u00ab\u00ac\t\4\2\2\u00ac\b\3\2\2\2\u00ad\u00ae"+
		"\t\5\2\2\u00ae\n\3\2\2\2\u00af\u00b0\t\6\2\2\u00b0\f\3\2\2\2\u00b1\u00b2"+
		"\t\7\2\2\u00b2\16\3\2\2\2\u00b3\u00b4\t\b\2\2\u00b4\20\3\2\2\2\u00b5\u00b6"+
		"\t\t\2\2\u00b6\22\3\2\2\2\u00b7\u00b8\t\n\2\2\u00b8\24\3\2\2\2\u00b9\u00ba"+
		"\t\13\2\2\u00ba\26\3\2\2\2\u00bb\u00bc\t\f\2\2\u00bc\30\3\2\2\2\u00bd"+
		"\u00be\t\r\2\2\u00be\32\3\2\2\2\u00bf\u00c0\t\16\2\2\u00c0\34\3\2\2\2"+
		"\u00c1\u00c2\t\17\2\2\u00c2\36\3\2\2\2\u00c3\u00c4\t\20\2\2\u00c4 \3\2"+
		"\2\2\u00c5\u00c6\t\21\2\2\u00c6\"\3\2\2\2\u00c7\u00c8\t\22\2\2\u00c8$"+
		"\3\2\2\2\u00c9\u00ca\t\23\2\2\u00ca&\3\2\2\2\u00cb\u00cc\t\24\2\2\u00cc"+
		"(\3\2\2\2\u00cd\u00ce\t\25\2\2\u00ce*\3\2\2\2\u00cf\u00d0\t\26\2\2\u00d0"+
		",\3\2\2\2\u00d1\u00d2\t\27\2\2\u00d2.\3\2\2\2\u00d3\u00d4\t\30\2\2\u00d4"+
		"\60\3\2\2\2\u00d5\u00d6\t\31\2\2\u00d6\62\3\2\2\2\u00d7\u00d8\t\32\2\2"+
		"\u00d8\64\3\2\2\2\u00d9\u00da\t\33\2\2\u00da\66\3\2\2\2\u00db\u00dc\5"+
		"\7\4\2\u00dc\u00dd\5%\23\2\u00dd\u00de\5\13\6\2\u00de\u00df\5\3\2\2\u00df"+
		"\u00e0\5)\25\2\u00e0\u00e1\5\13\6\2\u00e18\3\2\2\2\u00e2\u00e3\5\t\5\2"+
		"\u00e3\u00e4\5\3\2\2\u00e4\u00e5\5)\25\2\u00e5\u00e6\5\3\2\2\u00e6\u00e7"+
		"\5\5\3\2\u00e7\u00e8\5\3\2\2\u00e8\u00e9\5\'\24\2\u00e9\u00ea\5\13\6\2"+
		"\u00ea:\3\2\2\2\u00eb\u00ec\5\t\5\2\u00ec\u00ed\5\3\2\2\u00ed\u00ee\5"+
		")\25\2\u00ee\u00ef\5\3\2\2\u00ef\u00f0\5\5\3\2\u00f0\u00f1\5\3\2\2\u00f1"+
		"\u00f2\5\'\24\2\u00f2\u00f3\5\13\6\2\u00f3\u00f4\5\'\24\2\u00f4<\3\2\2"+
		"\2\u00f5\u00f6\5)\25\2\u00f6\u00f7\5\3\2\2\u00f7\u00f8\5\5\3\2\u00f8\u00f9"+
		"\5\31\r\2\u00f9\u00fa\5\13\6\2\u00fa>\3\2\2\2\u00fb\u00fc\5)\25\2\u00fc"+
		"\u00fd\5\3\2\2\u00fd\u00fe\5\5\3\2\u00fe\u00ff\5\31\r\2\u00ff\u0100\5"+
		"\13\6\2\u0100\u0101\5\'\24\2\u0101@\3\2\2\2\u0102\u0103\5\t\5\2\u0103"+
		"\u0104\5%\23\2\u0104\u0105\5\37\20\2\u0105\u0106\5!\21\2\u0106B\3\2\2"+
		"\2\u0107\u0108\5\3\2\2\u0108\u0109\5\31\r\2\u0109\u010a\5)\25\2\u010a"+
		"\u010b\5\13\6\2\u010b\u010c\5%\23\2\u010cD\3\2\2\2\u010d\u010e\5%\23\2"+
		"\u010e\u010f\5\13\6\2\u010f\u0110\5\35\17\2\u0110\u0111\5\3\2\2\u0111"+
		"\u0112\5\33\16\2\u0112\u0113\5\13\6\2\u0113F\3\2\2\2\u0114\u0115\5)\25"+
		"\2\u0115\u0116\5\37\20\2\u0116H\3\2\2\2\u0117\u0118\5\'\24\2\u0118\u0119"+
		"\5\21\t\2\u0119\u011a\5\37\20\2\u011a\u011b\5/\30\2\u011bJ\3\2\2\2\u011c"+
		"\u011d\5+\26\2\u011d\u011e\5\'\24\2\u011e\u011f\5\13\6\2\u011fL\3\2\2"+
		"\2\u0120\u0121\5\23\n\2\u0121\u0122\5\35\17\2\u0122\u0123\5)\25\2\u0123"+
		"N\3\2\2\2\u0124\u0125\5\r\7\2\u0125\u0126\5\31\r\2\u0126\u0127\5\37\20"+
		"\2\u0127\u0128\5\3\2\2\u0128\u0129\5)\25\2\u0129P\3\2\2\2\u012a\u012b"+
		"\5\7\4\2\u012b\u012c\5\21\t\2\u012c\u012d\5\3\2\2\u012d\u012e\5%\23\2"+
		"\u012eR\3\2\2\2\u012f\u0130\5\t\5\2\u0130\u0131\5\3\2\2\u0131\u0132\5"+
		")\25\2\u0132\u0133\5\13\6\2\u0133T\3\2\2\2\u0134\u0135\5\7\4\2\u0135\u0136"+
		"\5\37\20\2\u0136\u0137\5\35\17\2\u0137\u0138\5\'\24\2\u0138\u0139\5)\25"+
		"\2\u0139\u013a\5%\23\2\u013a\u013b\5\3\2\2\u013b\u013c\5\23\n\2\u013c"+
		"\u013d\5\35\17\2\u013d\u013e\5)\25\2\u013eV\3\2\2\2\u013f\u0140\5\27\f"+
		"\2\u0140\u0141\5\13\6\2\u0141\u0142\5\63\32\2\u0142X\3\2\2\2\u0143\u0144"+
		"\5!\21\2\u0144\u0145\5%\23\2\u0145\u0146\5\23\n\2\u0146\u0147\5\33\16"+
		"\2\u0147\u0148\5\3\2\2\u0148\u0149\5%\23\2\u0149\u014a\5\63\32\2\u014a"+
		"Z\3\2\2\2\u014b\u014c\5\r\7\2\u014c\u014d\5\37\20\2\u014d\u014e\5%\23"+
		"\2\u014e\u014f\5\13\6\2\u014f\u0150\5\23\n\2\u0150\u0151\5\17\b\2\u0151"+
		"\u0152\5\35\17\2\u0152\\\3\2\2\2\u0153\u0154\5%\23\2\u0154\u0155\5\13"+
		"\6\2\u0155\u0156\5\r\7\2\u0156\u0157\5\13\6\2\u0157\u0158\5%\23\2\u0158"+
		"\u0159\5\13\6\2\u0159\u015a\5\35\17\2\u015a\u015b\5\7\4\2\u015b\u015c"+
		"\5\13\6\2\u015c\u015d\5\'\24\2\u015d^\3\2\2\2\u015e\u015f\5\7\4\2\u015f"+
		"\u0160\5\21\t\2\u0160\u0161\5\13\6\2\u0161\u0162\5\7\4\2\u0162\u0163\5"+
		"\27\f\2\u0163`\3\2\2\2\u0164\u0165\5\3\2\2\u0165\u0166\5\t\5\2\u0166\u0167"+
		"\5\t\5\2\u0167b\3\2\2\2\u0168\u0169\5\7\4\2\u0169\u016a\5\37\20\2\u016a"+
		"\u016b\5\31\r\2\u016b\u016c\5+\26\2\u016c\u016d\5\33\16\2\u016d\u016e"+
		"\5\35\17\2\u016ed\3\2\2\2\u016f\u0170\5\7\4\2\u0170\u0171\5\37\20\2\u0171"+
		"\u0172\5\31\r\2\u0172\u0173\5+\26\2\u0173\u0174\5\33\16\2\u0174\u0175"+
		"\5\35\17\2\u0175\u0176\5\'\24\2\u0176f\3\2\2\2\u0177\u0178\5\r\7\2\u0178"+
		"\u0179\5%\23\2\u0179\u017a\5\37\20\2\u017a\u017b\5\33\16\2\u017bh\3\2"+
		"\2\2\u017c\u017d\5\3\2\2\u017d\u017e\5\35\17\2\u017e\u017f\5\t\5\2\u017f"+
		"j\3\2\2\2\u0180\u0181\5\37\20\2\u0181\u0182\5%\23\2\u0182l\3\2\2\2\u0183"+
		"\u0184\5\35\17\2\u0184\u0185\5\37\20\2\u0185\u0186\5)\25\2\u0186n\3\2"+
		"\2\2\u0187\u0188\5\23\n\2\u0188\u0189\5\35\17\2\u0189\u018a\5\'\24\2\u018a"+
		"\u018b\5\13\6\2\u018b\u018c\5%\23\2\u018c\u018d\5)\25\2\u018dp\3\2\2\2"+
		"\u018e\u018f\5\23\n\2\u018f\u0190\5\35\17\2\u0190\u0191\5)\25\2\u0191"+
		"\u0192\5\37\20\2\u0192r\3\2\2\2\u0193\u0194\5-\27\2\u0194\u0195\5\3\2"+
		"\2\u0195\u0196\5\31\r\2\u0196\u0197\5+\26\2\u0197\u0198\5\13\6\2\u0198"+
		"\u0199\5\'\24\2\u0199t\3\2\2\2\u019a\u019b\5+\26\2\u019b\u019c\5!\21\2"+
		"\u019c\u019d\5\t\5\2\u019d\u019e\5\3\2\2\u019e\u019f\5)\25\2\u019f\u01a0"+
		"\5\13\6\2\u01a0v\3\2\2\2\u01a1\u01a2\5\'\24\2\u01a2\u01a3\5\13\6\2\u01a3"+
		"\u01a4\5)\25\2\u01a4x\3\2\2\2\u01a5\u01a6\5/\30\2\u01a6\u01a7\5\21\t\2"+
		"\u01a7\u01a8\5\13\6\2\u01a8\u01a9\5%\23\2\u01a9\u01aa\5\13\6\2\u01aaz"+
		"\3\2\2\2\u01ab\u01ac\5\t\5\2\u01ac\u01ad\5\13\6\2\u01ad\u01ae\5\31\r\2"+
		"\u01ae\u01af\5\13\6\2\u01af\u01b0\5)\25\2\u01b0\u01b1\5\13\6\2\u01b1|"+
		"\3\2\2\2\u01b2\u01b3\5\'\24\2\u01b3\u01b4\5\13\6\2\u01b4\u01b5\5\31\r"+
		"\2\u01b5\u01b6\5\13\6\2\u01b6\u01b7\5\7\4\2\u01b7\u01b8\5)\25\2\u01b8"+
		"~\3\2\2\2\u01b9\u01ba\5\37\20\2\u01ba\u01bb\5%\23\2\u01bb\u01bc\5\t\5"+
		"\2\u01bc\u01bd\5\13\6\2\u01bd\u01be\5%\23\2\u01be\u0080\3\2\2\2\u01bf"+
		"\u01c0\5\5\3\2\u01c0\u01c1\5\63\32\2\u01c1\u0082\3\2\2\2\u01c2\u01c3\5"+
		"\3\2\2\u01c3\u01c4\5\'\24\2\u01c4\u01c5\5\7\4\2\u01c5\u0084\3\2\2\2\u01c6"+
		"\u01c7\5\t\5\2\u01c7\u01c8\5\13\6\2\u01c8\u01c9\5\'\24\2\u01c9\u01ca\5"+
		"\7\4\2\u01ca\u0086\3\2\2\2\u01cb\u01cc\5\35\17\2\u01cc\u01cd\5+\26\2\u01cd"+
		"\u01ce\5\31\r\2\u01ce\u01cf\5\31\r\2\u01cf\u0088\3\2\2\2\u01d0\u01d1\t"+
		"\34\2\2\u01d1\u008a\3\2\2\2\u01d2\u01d3\4\62;\2\u01d3\u008c\3\2\2\2\u01d4"+
		"\u01d5\4\"(\2\u01d5\u01dc\4*\u0080\2\u01d6\u01dc\5\u008bF\2\u01d7\u01dc"+
		"\5\u0089E\2\u01d8\u01dc\7^\2\2\u01d9\u01dc\3\2\2\2\u01da\u01dc\t\35\2"+
		"\2\u01db\u01d4\3\2\2\2\u01db\u01d6\3\2\2\2\u01db\u01d7\3\2\2\2\u01db\u01d8"+
		"\3\2\2\2\u01db\u01d9\3\2\2\2\u01db\u01da\3\2\2\2\u01dc\u008e\3\2\2\2\u01dd"+
		"\u01de\5\u008bF\2\u01de\u01df\5\u008bF\2\u01df\u0090\3\2\2\2\u01e0\u01e1"+
		"\5\u008bF\2\u01e1\u01e2\5\u008fH\2\u01e2\u0092\3\2\2\2\u01e3\u01e4\5\u008b"+
		"F\2\u01e4\u01e5\5\u0091I\2\u01e5\u0094\3\2\2\2\u01e6\u01e7\5\u0093J\2"+
		"\u01e7\u0096\3\2\2\2\u01e8\u01eb\5\u008bF\2\u01e9\u01eb\5\u008fH\2\u01ea"+
		"\u01e8\3\2\2\2\u01ea\u01e9\3\2\2\2\u01eb\u0098\3\2\2\2\u01ec\u01ef\5\u008b"+
		"F\2\u01ed\u01ef\5\u008fH\2\u01ee\u01ec\3\2\2\2\u01ee\u01ed\3\2\2\2\u01ef"+
		"\u009a\3\2\2\2\u01f0\u01f4\5\u008bF\2\u01f1\u01f3\5\u008bF\2\u01f2\u01f1"+
		"\3\2\2\2\u01f3\u01f6\3\2\2\2\u01f4\u01f2\3\2\2\2\u01f4\u01f5\3\2\2\2\u01f5"+
		"\u009c\3\2\2\2\u01f6\u01f4\3\2\2\2\u01f7\u01fc\5\u0089E\2\u01f8\u01fb"+
		"\5\u0089E\2\u01f9\u01fb\5\u008bF\2\u01fa\u01f8\3\2\2\2\u01fa\u01f9\3\2"+
		"\2\2\u01fb\u01fe\3\2\2\2\u01fc\u01fa\3\2\2\2\u01fc\u01fd\3\2\2\2\u01fd"+
		"\u009e\3\2\2\2\u01fe\u01fc\3\2\2\2\u01ff\u0200\7)\2\2\u0200\u0201\5\u0095"+
		"K\2\u0201\u0202\7/\2\2\u0202\u0203\5\u0097L\2\u0203\u0204\7/\2\2\u0204"+
		"\u0205\5\u0099M\2\u0205\u0206\7)\2\2\u0206\u00a0\3\2\2\2\u0207\u0208\7"+
		")\2\2\u0208\u020c\5\u008dG\2\u0209\u020b\5\u008dG\2\u020a\u0209\3\2\2"+
		"\2\u020b\u020e\3\2\2\2\u020c\u020a\3\2\2\2\u020c\u020d\3\2\2\2\u020d\u020f"+
		"\3\2\2\2\u020e\u020c\3\2\2\2\u020f\u0210\7)\2\2\u0210\u00a2\3\2\2\2\u0211"+
		"\u0213\t\36\2\2\u0212\u0211\3\2\2\2\u0213\u0214\3\2\2\2\u0214\u0212\3"+
		"\2\2\2\u0214\u0215\3\2\2\2\u0215\u0216\3\2\2\2\u0216\u0217\bR\2\2\u0217"+
		"\u00a4\3\2\2\2\u0218\u0219\7\61\2\2\u0219\u021a\7\61\2\2\u021a\u021e\3"+
		"\2\2\2\u021b\u021d\n\37\2\2\u021c\u021b\3\2\2\2\u021d\u0220\3\2\2\2\u021e"+
		"\u021c\3\2\2\2\u021e\u021f\3\2\2\2\u021f\u0222\3\2\2\2\u0220\u021e\3\2"+
		"\2\2\u0221\u0223\7\17\2\2\u0222\u0221\3\2\2\2\u0222\u0223\3\2\2\2\u0223"+
		"\u0224\3\2\2\2\u0224\u0231\7\f\2\2\u0225\u0226\7\61\2\2\u0226\u0227\7"+
		",\2\2\u0227\u022b\3\2\2\2\u0228\u022a\13\2\2\2\u0229\u0228\3\2\2\2\u022a"+
		"\u022d\3\2\2\2\u022b\u022c\3\2\2\2\u022b\u0229\3\2\2\2\u022c\u022e\3\2"+
		"\2\2\u022d\u022b\3\2\2\2\u022e\u022f\7,\2\2\u022f\u0231\7\61\2\2\u0230"+
		"\u0218\3\2\2\2\u0230\u0225\3\2\2\2\u0231\u0232\3\2\2\2\u0232\u0233\bS"+
		"\2\2\u0233\u00a6\3\2\2\2\17\2\u01db\u01ea\u01ee\u01f4\u01fa\u01fc\u020c"+
		"\u0214\u021e\u0222\u022b\u0230\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}